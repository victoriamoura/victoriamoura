function handleItemOnCart(e,t){let r=JSON.parse(localStorage.getItem("cart"))||[],a=localStorage.getItem("cartID");var o=r.find(t=>t.product===e.product),t=("add"===t?o?o.quantity+=1:r.push({product:e.product,sku:e.sku,quantity:1}):"remove"===t?o&&(1<o.quantity?--o.quantity:r=r.filter(t=>t.product!==e.product)):"removeAll"===t&&o&&(r=r.filter(t=>t.product!==e.product)),localStorage.setItem("cart",JSON.stringify(r)),{products:r.map(t=>({product:t.product,sku:t.sku,quantity:t.quantity}))});cartUpdateAPI(t,a).then(t=>{var e=t.data?t.data.id:null;!a&&e&&(localStorage.setItem("cartID",e),console.log("[handleItemOnCart] Novo cartID armazenado:",e)),console.log("[handleItemOnCart] Carrinho atualizado na API:",t)}).catch(t=>{console.error("[handleItemOnCart] Erro ao atualizar o carrinho na API:",t)})}function cartUpdateAPI(t,e){return fetch("https://us-central1-insider-integrations.cloudfunctions.net/front-end-api-interviews/v1/carts/"+(e?""+e:""),{method:e?"PUT":"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)}).then(t=>{if(t.ok)return t.json();throw new Error(`Erro ao ${e?"atualizar":"criar"} o carrinho com ID `+e)}).then(t=>(console.log(`Carrinho ${e?"com ID "+e:"criado"} com sucesso:`,t),localStorage.setItem("cartID",t.data.id),cartUpdateUI(t.data),t)).catch(t=>{throw console.error("Erro ao atualizar/criar o carrinho:",t),t})}function cartUpdateUI(t){var e=document.querySelector("cart-side"),r=document.querySelector(".js-cart-bubble");let a=e.querySelector(".js-cart-items");toggleCartVisibility(t.skus_quantity<1),r&&(r.textContent=t.skus_quantity),a.innerHTML="",t.products.forEach(t=>{a.innerHTML+=`
      <product-module
        data-product="${t.product.id}"
        data-sku="${t.sku.id}"
        data-name="${t.name}"
        data-price="${t.sku.price}"
        data-image="${t.image_url}"
        class="cart-item"
      >
        <picture class="cart-item__picture">
          <img src="${t.product.image_url}&width=82" width="82px" alt="Produto ${t.product.name}">
        </picture>
        <div class="cart-item__infos js-cart-item-infos">
          <button class="cart-item__rmv-all js-rmv-all-cart">remover</button>
          <svg class="loading-spinner visibility-hidden" width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path d="M12,4a8,8,0,0,1,7.89,6.7A1.53,1.53,0,0,0,21.38,12h0a1.5,1.5,0,0,0,1.48-1.75,11,11,0,0,0-21.72,0A1.5,1.5,0,0,0,2.62,12h0a1.53,1.53,0,0,0,1.49-1.3A8,8,0,0,1,12,4Z" />
          </svg>
          <h4 class="cart-item__infos__name">${t.product.name}</h4>
          <p class="cart-item__infos__price">
            ${Intl.NumberFormat("pt-BR",{style:"currency",currency:"BRL"}).format(t.price)}
          </p>
          <div class="cart-item__infos__quantity">
            <button class="cart-item__infos__quantity-rmv js-rmv-qty-cart">
              <svg width="6" height="2" viewBox="0 0 6 2" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M0.96 1.464V0.456H5.76V1.464H0.96Z"/>
              </svg>
            </button>
            <span class="cart-item__infos__quantity-curr">${t.quantity}</span>
            <button class="cart-item__infos__quantity-add js-add-qty-cart">
              <svg width="9" height="8" viewBox="0 0 9 8" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M4.112 7.896V4.744H0.96V3.736H4.112V0.584H5.12V3.736H8.264V4.744H5.12V7.896H4.112Z"/>
              </svg>
            </button>
          </div>
        </div>
      </product-module>
    `}),e.querySelector(".js-cart-total").textContent=new Intl.NumberFormat("pt-BR",{style:"currency",currency:"BRL"}).format(t.amount),document.querySelectorAll(".loading-spinner").forEach(t=>{t.classList.add("visibility-hidden")})}async function cartRecovery(t){try{var e=await fetch("https://us-central1-insider-integrations.cloudfunctions.net/front-end-api-interviews/v1/carts/"+t);if(!e.ok)throw new Error("[cartRecovery] Erro ao recuperar o carrinho da API");var r=await e.json();console.log("[cartRecovery] Carrinho recuperado da API:",r),cartUpdateUI(r.data)}catch(t){console.error("[cartRecovery] Erro ao recuperar o carrinho:",t)}}async function collectionRecovery(t){try{var e=await fetch("https://us-central1-insider-integrations.cloudfunctions.net/front-end-api-interviews/v1/products/",{method:"GET",headers:{"Content-Type":"application/json"}});if(!e.ok)throw new Error("[collectionRecovery] Erro na requisição: "+e.status);var r=(await e.json()).data;r&&0<r.length?r.forEach(t=>{0===t.sku.inventory?(t.tag="sold-out",t.tagText="Volta logo",t.available=!1):(t.sku.inventory<15?(t.tag="last-units",t.tagText="últimas unidades"):t.tag="visibility-hidden",t.available=!0),t.price=new Intl.NumberFormat("pt-BR",{style:"currency",currency:"BRL"}).format(t.sku.price),pagePopulate(t)}):console.error("[collectionRecovery] Nenhum produto encontrado.")}catch(t){console.error("[collectionRecovery] Erro ao buscar os dados:",t),document.querySelector(".js-modal-store-error").classList.remove("visibility-hidden")}finally{setTimeout(()=>{t.classList.add("visibility-hidden"),setTimeout(()=>{t.remove()},500)},500)}}function pagePopulate(t){document.querySelector(".js-collection").innerHTML+=`
    <product-module
      data-product="${t.id}"
      data-sku="${t.sku.id}"
      data-name="${t.name}"
      data-price="${t.sku.price}"
      data-image="${t.image_url}"
      data-available="${t.available}"
      class="collection__product-module"
      role="listitem"
    >
      <picture class="collection__product-module__picture">
        <div class="tag js-tag ${t.tag}">${t.tagText}</div>
        <img class="js-product-image-elem" src="${t.image_url}&width=317" width="317px" alt="${t.name}" data-image-full="${t.image_url}">
      </picture>
      <h4 class="collection__product-module__title">${t.name}</h4>
      <p class="collection__product-module__price">${t.price}</p>
      <button
        type="button"
        class="btn collection__product-module__button js-add-to-cart"
      >comprar
        <svg class="loading-spinner visibility-hidden" width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path d="M12,4a8,8,0,0,1,7.89,6.7A1.53,1.53,0,0,0,21.38,12h0a1.5,1.5,0,0,0,1.48-1.75,11,11,0,0,0-21.72,0A1.5,1.5,0,0,0,2.62,12h0a1.53,1.53,0,0,0,1.49-1.3A8,8,0,0,1,12,4Z" />
        </svg>
      </button>
    </product-module>
  `}function getCartsAPI(){return fetch("https://us-central1-insider-integrations.cloudfunctions.net/front-end-api-interviews/v1/carts",{method:"GET",headers:{"Content-Type":"application/json"}}).then(t=>{if(t.ok)return t.json();throw new Error("[getCartsAPI] Erro na requisição")}).then(t=>(console.log("[getCartsAPI] Dados recebidos:",t),t.data)).catch(t=>{throw console.error("[getCartsAPI] Erro:",t),t})}function cartDeleteAPI(e){return fetch("https://us-central1-insider-integrations.cloudfunctions.net/front-end-api-interviews/v1/carts/"+e,{method:"DELETE",headers:{"Content-Type":"application/json"}}).then(t=>{if(t.ok)return console.log(`[cartDeleteAPI] Carrinho com ID ${e} deletado com sucesso`),!0;throw new Error("[cartDeleteAPI] Erro ao deletar carrinho com ID "+e)}).catch(t=>(console.error("[cartDeleteAPI] Erro ao deletar carrinho:",t),!1))}function deleteAllCartsAPI(){getCartsAPI().then(t=>{t=t||[];0===t.length?console.log("Nenhum carrinho para deletar."):t.forEach(t=>{cartDeleteAPI(t.id)})}).catch(t=>{console.error("[deleteAllCartsAPI] Erro ao buscar os carrinhos:",t)})}function toggleCartVisibility(t){var e=document.querySelector(".js-cart"),r=document.querySelector(".js-cart-empty"),a=document.querySelector(".js-cart-footer"),o=document.querySelector(".js-cart-items");t?(e.classList.remove("cart-opened"),r.classList.remove("visibility-hidden"),a.classList.add("visibility-hidden"),o.classList.add("visibility-hidden")):(r.classList.add("visibility-hidden"),a.classList.remove("visibility-hidden"),o.classList.remove("visibility-hidden"))}export{handleItemOnCart,cartUpdateAPI,cartUpdateUI,cartRecovery,collectionRecovery,pagePopulate,getCartsAPI,cartDeleteAPI,deleteAllCartsAPI,toggleCartVisibility};